// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`a grafana instance adding plugins via constructor 1`] = `
Array [
  Object {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "Grafana",
    "metadata": Object {
      "labels": Object {
        "app": "grafana",
      },
      "name": "test-my-grafana-c87951cf",
    },
    "spec": Object {
      "baseImage": "public.ecr.aws/ubuntu/grafana:latest",
      "client": Object {
        "preferService": true,
      },
      "config": Object {
        "auth.anonymous": Object {
          "enabled": true,
        },
        "log": Object {
          "level": "debug",
          "mode": "console",
        },
        "security": Object {
          "admin_password": "secret",
          "admin_user": "root",
        },
      },
      "dashboardLabelSelector": Array [
        Object {
          "matchLabels": Object {
            "app": "grafana",
          },
        },
      ],
      "deployment": Object {
        "labels": Object {
          "app": "grafana",
        },
      },
      "ingress": Object {
        "enabled": true,
      },
    },
  },
  Object {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "GrafanaDashboard",
    "metadata": Object {
      "labels": Object {
        "app": "grafana",
      },
      "name": "test-my-grafana-my-dashboard-c85bcbbe",
    },
    "spec": Object {
      "datasources": Array [],
      "json": "{
  \\"id\\": null,
  \\"tags\\": [],
  \\"style\\": \\"dark\\",
  \\"timezone\\": \\"browser\\",
  \\"editable\\": true,
  \\"hideControls\\": false,
  \\"graphTooltip\\": 1,
  \\"panels\\": [],
  \\"time\\": {
    \\"from\\": \\"now-toSeconds(opts = {}) {\\\\n        return convert(this.amount, this.unit, TimeUnit.Seconds, opts);\\\\n    }s\\",
    \\"to\\": \\"now\\"
  },
  \\"timepicker\\": {
    \\"time_options\\": [],
    \\"refresh_intervals\\": []
  },
  \\"templating\\": {
    \\"list\\": []
  },
  \\"annotations\\": {
    \\"list\\": []
  },
  \\"refresh\\": \\"toSeconds(opts = {}) {\\\\n        return convert(this.amount, this.unit, TimeUnit.Seconds, opts);\\\\n    }s\\",
  \\"schemaVersion\\": 17,
  \\"version\\": 0,
  \\"links\\": [],
  \\"title\\": \\"My Dashboard\\"
}",
      "name": "my-dashboard",
      "plugins": Array [
        Object {
          "name": "grafana-piechart-panel",
          "version": "1.3.6",
        },
        Object {
          "name": "grafana-clock-panel",
          "version": "1.0.2",
        },
      ],
    },
  },
]
`;

exports[`a grafana instance adding plugins via method 1`] = `
Array [
  Object {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "Grafana",
    "metadata": Object {
      "labels": Object {
        "app": "grafana",
      },
      "name": "test-my-grafana-c87951cf",
    },
    "spec": Object {
      "baseImage": "public.ecr.aws/ubuntu/grafana:latest",
      "client": Object {
        "preferService": true,
      },
      "config": Object {
        "auth.anonymous": Object {
          "enabled": true,
        },
        "log": Object {
          "level": "debug",
          "mode": "console",
        },
        "security": Object {
          "admin_password": "secret",
          "admin_user": "root",
        },
      },
      "dashboardLabelSelector": Array [
        Object {
          "matchLabels": Object {
            "app": "grafana",
          },
        },
      ],
      "deployment": Object {
        "labels": Object {
          "app": "grafana",
        },
      },
      "ingress": Object {
        "enabled": true,
      },
    },
  },
  Object {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "GrafanaDashboard",
    "metadata": Object {
      "labels": Object {
        "app": "grafana",
      },
      "name": "test-my-grafana-my-dashboard-c85bcbbe",
    },
    "spec": Object {
      "datasources": Array [],
      "json": "{
  \\"id\\": null,
  \\"tags\\": [],
  \\"style\\": \\"dark\\",
  \\"timezone\\": \\"browser\\",
  \\"editable\\": true,
  \\"hideControls\\": false,
  \\"graphTooltip\\": 1,
  \\"panels\\": [],
  \\"time\\": {
    \\"from\\": \\"now-toSeconds(opts = {}) {\\\\n        return convert(this.amount, this.unit, TimeUnit.Seconds, opts);\\\\n    }s\\",
    \\"to\\": \\"now\\"
  },
  \\"timepicker\\": {
    \\"time_options\\": [],
    \\"refresh_intervals\\": []
  },
  \\"templating\\": {
    \\"list\\": []
  },
  \\"annotations\\": {
    \\"list\\": []
  },
  \\"refresh\\": \\"toSeconds(opts = {}) {\\\\n        return convert(this.amount, this.unit, TimeUnit.Seconds, opts);\\\\n    }s\\",
  \\"schemaVersion\\": 17,
  \\"version\\": 0,
  \\"links\\": [],
  \\"title\\": \\"My Dashboard\\"
}",
      "name": "my-dashboard",
      "plugins": Array [
        Object {
          "name": "grafana-piechart-panel",
          "version": "1.3.6",
        },
        Object {
          "name": "grafana-clock-panel",
          "version": "1.0.2",
        },
      ],
    },
  },
]
`;

exports[`a grafana instance defaults 1`] = `
Array [
  Object {
    "apiVersion": "integreatly.org/v1alpha1",
    "kind": "Grafana",
    "metadata": Object {
      "labels": Object {
        "app": "grafana",
      },
      "name": "test-my-grafana-c87951cf",
    },
    "spec": Object {
      "baseImage": "public.ecr.aws/ubuntu/grafana:latest",
      "client": Object {
        "preferService": true,
      },
      "config": Object {
        "auth.anonymous": Object {
          "enabled": true,
        },
        "log": Object {
          "level": "debug",
          "mode": "console",
        },
        "security": Object {
          "admin_password": "secret",
          "admin_user": "root",
        },
      },
      "dashboardLabelSelector": Array [
        Object {
          "matchLabels": Object {
            "app": "grafana",
          },
        },
      ],
      "deployment": Object {
        "labels": Object {
          "app": "grafana",
        },
      },
      "ingress": Object {
        "enabled": true,
      },
    },
  },
]
`;
